---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    logging:
      driver: none
    extra_hosts:
      - "moby:127.0.0.1"

  kafka:
    image: confluentinc/cp-kafka:5.3.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    logging:
      driver: none
    extra_hosts:
      - "moby:127.0.0.1"

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.0
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"
      SCHEMA_REGISTRY_DEBUG: "true"
    ports:
      - 8081:8081
    logging:
      driver: none
    extra_hosts:
      - "moby:127.0.0.1"

  db:
    image: postgres:11.6
    environment:
      POSTGRES_DB: "ns-disruptions"
    ports:
      - "54320:5432"
    logging:
      driver: none

  scraper:
    image: scraper:0.1.0-SNAPSHOT
    environment:
      SCRAPER_AUTH_KEY: ""
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    depends_on:
      - kafka

  decoder:
    image: flink-processor:0.1.0-SNAPSHOT
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    entrypoint: /opt/docker/bin/decoder
    depends_on:
      - kafka

  de-duplicator:
    image: flink-processor:0.1.0-SNAPSHOT
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    entrypoint: /opt/docker/bin/de-duplicator
    depends_on:
      - kafka

  re-modeller:
    image: flink-processor:0.1.0-SNAPSHOT
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      DB_URL: "jdbc:postgresql://db:5432/ns-disruptions"
    entrypoint: /opt/docker/bin/remodeller
    depends_on:
      - db
      - kafka


